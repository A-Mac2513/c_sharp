// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quiz_App.Models;

#nullable disable

namespace Quiz_App.Migrations
{
    [DbContext(typeof(Quiz_App_DB))]
    [Migration("20230805044645_INIT")]
    partial class INIT
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Quiz_App.Models.Answers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("answer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("is_correct")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("q_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("q_id");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Quiz_App.Models.Questions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("question")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Quiz_App.Models.Answers", b =>
                {
                    b.HasOne("Quiz_App.Models.Questions", "q_")
                        .WithMany()
                        .HasForeignKey("q_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("q_");
                });
#pragma warning restore 612, 618
        }
    }
}
